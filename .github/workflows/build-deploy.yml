name: Build and Deploy Code
# run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push,pull_request]

jobs:
  build: 
    environment: 
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      ALGORITHM: ${{secrets.ALGORITHM}}
    services:
      postgres:
        image: postgres
        env: 
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_USERNAME}}_test
        ports:
        -  5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2
      - name: Install Python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: Installing all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest
      # -  name: Login to Docker Hub
      #    uses: docker/login-action@v1
      #    with:
      #      username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #      password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # -  name: Set up Docker Buildx
      #    uses: docker/setup-buildx-action@v1
      #    with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mevijaygupta2010/vj-fastapi:latest
      #     cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:buildcache
      #     cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:buildcache,mode=max
      # -   name: Image digest
      #     run: echo ${{steps.docker_build.output.digests}} 

  deploy:
    runs-on: ubuntu-latest 
    needs: [build]

    steps:
      - name: deploying stuff
        run: echo "going to dpeploy"


